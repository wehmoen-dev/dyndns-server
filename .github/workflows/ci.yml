name: CI/CD Pipeline

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-server:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod download

      - name: Build the server application
        run: go build -o dyndns-server cmd/server/main.go

      - name: Run dyndns-server --help
        run: ./dyndns-server --help

  build-client:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod download

      - name: Build the client application
        run: go build -o dyndns-client cmd/client/main.go

      - name: Run dyndns-client --help
        run: ./dyndns-client --help

  build-and-tag:
    runs-on: ubuntu-latest
    needs: [build-server, build-client]

    if: github.event_name != 'workflow_dispatch'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: auth
        name: Set up Google Cloud credentials
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use Google Artifact Registry
        run: |
          gcloud auth configure-docker europe-west3-docker.pkg.dev

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME }}/dyndns-server

          case "${{ github.event_name }}" in
            push)
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                --tag $IMAGE_NAME:latest \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --push .
              ;;
            release)
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                --tag $IMAGE_NAME:latest \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --tag $IMAGE_NAME:${{ github.event.release.tag_name }} \
                --push .
              ;;
            pull_request)
              PR_ID=${{ github.event.pull_request.number }}
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                --tag $IMAGE_NAME:pr-$PR_ID \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --push .
              ;;
          esac
